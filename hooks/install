#!/usr/bin/python

import os
import os.path
import shutil

import setup

setup.pre_install()

from charmhelpers import fetch
from charmhelpers.core import hookenv
from charmhelpers.core.hookenv import service_name, log
from charmhelpers.core.templating import render
from charmhelpers.core.host import mkdir

def setup_upstart_job():
    working_dir = os.getcwd()
    charm_upstart_conf = "/var/lib/charm/{}/upstart.conf".format(service_name())
    mkdir(os.path.dirname(charm_upstart_conf))
    context = {'decoder_path': '{}/hooks/decode_ceph'.format(working_dir)}

    render('upstart.conf', charm_upstart_conf, context, perms=0o644)
    log('copying {} to /etc/init'.format(charm_upstart_conf))
    shutil.copy(charm_upstart_conf, '/etc/init/decode_ceph.conf')



def install():
    hookenv.log('Installing ceph-metrics-collector')
    fetch.add_source(source='deb http://packages.elasticsearch.org/logstash/1.5/debian stable main',
                     key='D88E42B4')
    fetch.apt_update()
    fetch.apt_install(fetch.filter_installed_packages(
        ['collectd', 'collectd-utils', 'logstash', 'libpcap-dev', 'python-netifaces']))
    setup_upstart_job()
    setup_logstash()

def setup_logstash():
    if not os.path.exists("/opt/logstash/patterns"):
        mkdir("/opt/logstash/patterns")
    src = os.path.join(hookenv.charm_dir(), "files", "ceph")
    dest = "/opt/logstash/patterns/ceph"
    shutil.copyfile(src, dest)

    src = os.path.join(hookenv.charm_dir(), "files", "ceph_es.conf")
    dest = "/etc/logstash/conf.d/01-ceph.conf"
    shutil.copyfile(src, dest)

if __name__ == "__main__":
    install()
